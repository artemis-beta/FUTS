MACRO(FIND_TESTS)
	MESSAGE(STATUS "[FortUTF]")
	MESSAGE(STATUS "\tFinding tests in directory: ${TEST_DIR}")
    IF(NOT TEST_DIR)
        SET(TEST_DIR ${CMAKE_SOURCE_DIR}/tests)
    ENDIF()

    GET_FILENAME_COMPONENT(FUTS_SRC_DIR ../src ABSOLUTE)

    FILE(GLOB FUTS_SRCS ${FUTS_SRC_DIR}/*.f90)

    IF(NOT SRC_FILES AND NOT SRC_LIBRARY)
	    MESSAGE(FATAL_ERROR "Variable SRC_FILES or SRC_LIBRARY must be set")
    ENDIF()

    FILE(GLOB TEST_LIST ${TEST_DIR}/test_*.f90)

    MESSAGE(STATUS "\tTests Files Found: ")
    FOREACH(TEST_NAME ${TEST_LIST})
	    MESSAGE(STATUS "\t  - ${TEST_NAME}")
    ENDFOREACH()

    EXECUTE_PROCESS(
	    COMMAND bash -c "for i in ${TEST_LIST}; do cat $i | grep \"SUBROUTINE\" | rev | cut -d ' ' -f 1 | rev; done"
	    OUTPUT_VARIABLE TEST_SUBROUTINES
    )
    STRING(REGEX REPLACE "\n" " " TEST_SUBROUTINES "${TEST_SUBROUTINES}")
    STRING(REGEX REPLACE " SUBROUTINE " " " TEST_SUBROUTINES "${TEST_SUBROUTINES}")
    SET(TEST_SUBROUTINES_LIST "${TEST_SUBROUTINES}")
    SEPARATE_ARGUMENTS(TEST_SUBROUTINES_LIST)
    LIST(REMOVE_DUPLICATES TEST_SUBROUTINES_LIST)
    LIST(REMOVE_ITEM TEST_SUBROUTINES_LIST SUBROUTINE)
    MESSAGE(STATUS "\tTests Found: ")
    FOREACH(SUBROOT ${TEST_SUBROUTINES_LIST})
	    MESSAGE(STATUS "\t  - ${SUBROOT}")
    ENDFOREACH()

    EXECUTE_PROCESS(
	    COMMAND bash -c "echo \"PROGRAM TEST_${PROJECT_NAME}\" >> ${TEST_DIR}/run_tests.f90"
	    COMMAND bash -c "echo \"    USE FORTUTF\" >> ${TEST_DIR}/run_tests.f90"
	    COMMAND bash -c "for i in ${TEST_SUBROUTINES}; do echo \"    CALL $i\" >> ${TEST_DIR}/run_tests.f90; done"
	    COMMAND bash -c "echo \"    CALL TEST_SUMMARY\" >> ${TEST_DIR}/run_tests.f90"
	    COMMAND bash -c "echo \"END PROGRAM\" >> ${TEST_DIR}/run_tests.f90"
   )

   IF(SRC_FILES)
	   ADD_EXECUTABLE(${PROJECT_NAME}_Tests ${SRC_FILES} ${FUTS_SRCS} ${TEST_LIST} ${TEST_DIR}/run_tests.f90)
   ELSE()
	   ADD_EXECUTABLE(${PROJECT_NAME}_Tests ${SRC_FILES} ${FUTS_SRCS} ${TEST_DIR}/run_tests.f90)
   ENDIF()

   IF(SRC_LIBRARY)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${SRC_LIBRARY})
   ENDIF()

ENDMACRO()
